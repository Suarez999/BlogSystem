<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="me.xx.blogsystem.dao.WordMapper" >
  <resultMap id="BaseResultMap" type="me.xx.blogsystem.entity.Word" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="userIp" property="userip" jdbcType="VARCHAR" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="wordDate" property="worddate" jdbcType="TIMESTAMP" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="blogger_id" property="bloggerId" jdbcType="INTEGER" />
  </resultMap>
 
  <insert id="insert" parameterType="word">
  		insert into word (userIp,content,wordDate,state,blogger_id) values(#{userip},#{content},now(),#{state},#{bloggerId})
  </insert>
  
 	<select id="findByMap" parameterType="Map" resultMap="BaseResultMap">
		select * from word
		<where>
			<if test="bloggerId!=null">
				and blogger_id=#{bloggerId}
			</if>
		</where>
				ORDER BY wordDate DESC
		<if test="start!=null and pageSize!=null">
 				limit #{start},#{pageSize}
		</if>
	</select>
	
	<select id="getPageCount" parameterType="Map" resultType="Integer">
  		select count(1) from word
  		<where>
			<if test="bloggerId!=null">
				and blogger_id=#{bloggerId}
			</if>
		</where>
  	</select>
  	
  	<delete id="deleteList">
  		delete from word where id in
  		<foreach collection="array" item="pk" open="(" close=")" separator=",">
  			#{pk}
  		</foreach>
  	</delete>
</mapper>